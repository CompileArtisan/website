#+OPTIONS: toc:nil
#+begin_export markdown
---
title: "Paste-cat"
date: 2025-03-16
description: "How uniqueness and inspiration met in my workflow"
---
#+end_export

#+TOC: headlines 2

* Introduction
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The Praanesh of 2024 was a person with a stable
workflow on Windows. I've tried many operating systems and I've found myself
very comfortable with Windows 11 over the past 3 years. Enter the year 2025, and
the way I use a laptop is not what it once was.

* The Hunt For the Right Setup
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If you've read my [[https://compileartisan.pages.dev/blogs/about-me]["about-me" blog]], you'd
have found my trusted steed, not-so-trusted because of how I had to "fix" it. My
pursuit of finding the best operating system started off with trying ChromeOS.
It was 2019 and I was running Insider Previews of Windows 10 on my HP Envy m4.
It was around that time when I discovered what Chromebooks were. MKBHD's review
of the original Pixelbook instantly caught my attention, and that provoked me to
watch a lot of Chrome Unboxed to learn more about them. I was really intrigued
by the fact that progressive web apps can almost replace any native app I would
ever use (as a kid of 9th grade of course). Chromebooks are models certified by
Google to ship with ChromeOS. So if your laptop didn't ship with ChromeOS, you
can't install ChromeOS. As simple as that. I tried a bunch of different ChromeOS
distributions, none of which were from Google (obviously). Now I found it hard
to work with Microsoft Office, and I wanted to go back to Windows. This was a
little bit of an issue, because I didn't have a plan B (read: no
Windows-bootable device as backup). This kept getting worse and worse. Making a
Windows-bootable device in ChromeOS is utter nonsense (it's a browser guys), and
this was the only computer I had at home. I almost had to settle for ChromeOS
forever. /Almost/, because life had something else in stock for me.

* Hello Linux
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The problem was simple: I couldn't go from
ChromeOS to Windows 10. Later on, I found out that I was right about going from
ChromeOS to Windows /directly/. But that doesn't mean you can't go to Windows at
all. You can go to a Linux distro, and then from there you can make a
Windows-bootable device. I've used my dad's laptop from 2003 (in 2010) which had
Linux Mint, so this definitely wasn't my first encounter with linux. I got
Ubuntu on my trusted steed and now that I have linux, I realized that unleashed
a whole new breed of freedom. I went on to make my Gnome desktop, a macOS
Catalina clone :-P. What was supposed to be my intermediate OS, now became my
primary setup. Application support was way better than ChromeOS, so it was
definitely an upgrade. The LibreOffice suite did have a lot to offer, and could
easily replace Microsoft Office in my life.

* Not Home Yet
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; I don't quite remember why, but I really
wanted to go back to Windows. This intermediate OS was fun, but I thought it was
finally time to press onward with installing Windows 10. I thought I'll try dual
booting, since I did look back and simply appreciate my Catalina-flavoured
Gnome. I buckled up and set out by downloading the ISO, creating the bootable
media, and shrinking the volume â€” just the usual routine. It was all sunshine
and rainbows until I accidentally deleted the partition which had Linux on it ðŸ’€.

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; I had to wait for *months* before I could
get hold of another laptop, to make myself a bootable USB drive. In the
waiting-period I started revisiting Windows 8.1, and all the keynotes about it.
I really did fall for its charms (/pun intended :), refer pic below/).

#+begin_export markdown
![Image of Windows 8.1 Charms](/charm-bar.jpg "Windows 8.1 Charms")
#+end_export

#+begin_export html
<center> Image of Windows 8.1 Charms (the quick-access toggles on the right) </center><br>
#+end_export


So I threw in Windows 8.1 on my trusted steed, and I experienced speeds I never
witnessed before. I wondered if I was too young to truly appreciate this back
in 2012. The Metro interface was incredibly fluid and the boot-up time was no
longer than 10 seconds! This was when I actually became a good Windows user,
learning all the shortcuts and working my own ways around the OS. What also
helped me fly around was my new profound love for touch-typing.

* The Ladder Through Windows
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Here comes a chunk of time missing from my
memory. For some reason I don't remember, I decided to upgrade to Windows 10. I
missed the metro interface so much from Windows 8.1, that I used to use tablet
mode on my non-touchscreen laptop ðŸ˜‚. Ever since I got Windows running, I was
obsessed with always being on the latest version. You wouldn't really find
anyone else excited for updates like Windows 10 20H2. The one which *really* got
me hyped was 21H2, which later came to be known as Windows 11. I've followed
Linus Tech Tips, for a long time and I still tune in. He's always fueled my
curiosity to learn about tech and maybe try my hand in some of it. I even had
the very famous leaked ISO downloaded, and my heart wanted it installed. But my
head knew better so I restricted myself to preparing myself to install it the
proper way when it actually comes out. My laptop satisfied all of the system
requirements (including a Secure Boot capable UEFI), except for the presence of
a TPM module. On October 5th, 2021 (the very day that Windows 11 was officially
released), I managed to spoof the TPM Module and get it installed on my trusted
steed. Ever since, I didn't mess around with my laptop too much since I needed
it to remain reliable enough to get me through my last 2 years of high school.
My laptop was already pretty old by then (almost 10 years), so I swapped out my
hard drive for a shiny new SSD (Samsung EVO 870) to keep it chugging along.

* New Laptop!
After I got into college, my parents got me an ASUS TUF A15 FA507NU FA577NU
with:
- 16GiB of memory
- 512GiB of storage
- an AMD Ryzenâ„¢ 7 7735HS
- AMD Radeonâ„¢ 680M integrated graphics
- an NVIDIA GeForce RTX 4050 graphics card
- a happy owner :)

Now I had some courage to play around with my trusted steed. Didn't I tell you I
made a macOS Catalina themed Ubuntu? I came across this video from Linus Tech Tips:

#+begin_export html
<center><iframe width="560" height="315" src="https://www.youtube.com/embed/ATnpEOo3GJA?si=fNpEODp48e00W_Ul" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></center>
#+end_export

This time, I decided to make a macOS Big Sur powered hackintosh, using the
[[https://dortania.github.io/OpenCore-Install-Guide/][OpenCore Install Guide]]. Research on this took weeks, with my main sources of
information being [[https://www.tonymacx86.com/][tonymacx86.com]] and various subreddits. I tried relentlessly to
get the kexts work but they just wouldn't! I figured hackintoshing wasn't my cup
of tea. In the end, I threw in Ubuntu, and handed over the trusted steed to my
younger brother.

* Rekindled
The ASUS TUF came with Windows 11, and I instantly felt at home. My college gave
me a Microsoft account with 1 TB of storage on Onedrive. Any piece of code I
would write, would be pushed to a GitHub repository. I primarily used Visual
Studio Code, and was fairly proficient in it. Since I'd settled into a good
setup, the time I spent on its tweaking had gone towards learning new languages
and professional skills. This near-permanent setup of mine remained untouched
until I looked into the laptops of two people: [[https://adithyanair.com/][Adithya Nair]] and [[https://github.com/varunadhityagb/][Varun Adhitya G
B]].


Varun began to run Arch Linux and set up Hyprland on it. This was when I first
understood the concept of compositors and window managers. I came across
Adithya's setup, and he ran Hyprland on Fedora. I was quite fascinated by their
work, but definitely didn't convince me to make the switch. I remained steadfast
in sticking with Windows, thanks to how it does exactly what I need, the way I
want it to. What they did convince me in though, was switching my editor.
Adithya compelled me to start using the Vim editor, as that would truly
capitalize on my typing speed. I used Neovim (LazyVim) on PowerShell. I loved
Vim motions and I sought to use it as my primary code editor. I deeply enjoyed
customizing it and in this process there were several shortcomings (I don't
quite remember them right now). I was fed up of people online comparing it to
Emacs, which is what Adithya uses. On learning that Doom Emacs on ~evil-mode~,
is an excellent alternative to Neovim, my next mission was clear: get Emacs on
Windows. I'm sorry for what I'm about to say, but I ran Doom Emacs on WSL. I
just pretended like the start-up time of 20 seconds didn't matter to me. Ever
since, Adithya has been my goto guide for this.


# insert command prompt image here, and after the image add "...on PowerShell"

On setting up LSPs and whatnot, Doom Emacs had completely replaced Visual Studio
Code for me. Emacs is more than just a code editor. It's a text editor which can
replace Microsoft Word if you use ~.org~ files. This is definitely not a popular
file format, but you can export it as anything you'd like: ~.tex~, ~.pdf~,
~.md~, ~.html~, and so on. Having to both code, and write documents in the same
place has changed the way I work with my computer. Here at college, we are
required to write papers to submit and present in IEEE conferences. While Emacs
is an amazing editor for writing in LaTeX directly, you could use an
org-template which ensures a LaTeX export in the IEEE format. The blog you're
reading right now, is an Org document too!

* Final Move and Final Thoughts

I've been influenced thoroughly, and I've definitely taken inspiration from my
peers. I've always wanted to use my laptop unlike anybody else. The way I use my
laptop is always backed up by my research. A YouTube video or a random article
on the internet only tells me what I can change; it doesn't tell me how. This is
just the way I like it, as "how" is left to me and my experiments. In college,
my inspiration has changed from YouTubers to actual people I see every day. But
again, they're inspiration, not instruction manuals. I strive to keep them that
way, as this keeps me from thinking I'm a copycat. I take bits and pieces from
everywhere, and paste them into my workflow, such that it works for /me/. I'm a
"pastecat" of sorts as I paste something from somewhere and play around with
whatever I've got. The experimental aspect involved with my setup is primarily
in finding new things for my configuration files for Doom Emacs, and adopting
new shortcuts. The org-template for the IEEE template was a direct lift from
another website, but my choice of pasting this, is an experiment I own. We're
all building on top of each otherâ€™s foundations, and we must take pride in it.

Oh and here's a twist: I *did* switch to Fedora completetely ðŸ™‚. I'm an ardent
GNOME user and have found myself quite comfortable with the GUI. I don't see
myself switching to Hyprland anytime soon, because I have capped my time to just
getting things done instead of tweaking things endlessly. Because now, I've made
myself another established setup. Let's see if something else fascinates me.
